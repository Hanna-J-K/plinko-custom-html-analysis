import {
  checkForGoogleFonts,
  checkForBootstrapImports,
  testMethodAlwaysFalse,
  checkForBootstrapClasses,
  checkForAEMGridClasses,
  hasImgWithoutLazyLoading,
  hasImgWithoutAlt,
  hasIncorrectVideoPlayerImport,
  hasIframeTag,
  hasStyleAttribute,
  hasUniqueParentElementId,
  hasBodyOrHeadInFragment,
  hasH4TagsAndBelow,
  hasTagsAboveH4,
  tablesHasCaption,
  searchForSocialSharingElements,
  imgHasSizeParameters,
  checkCustomCSS,
  searchForFontAwesomeIcons,
  searchForBITags
} from "./methods.js";

export const checkList = [
  {
    section: "3rd party",
    checkpoint: "Google Fonts imports",
    method: checkForGoogleFonts,
    done: undefined,
    comments:
      "Do not use 3rd party imports for fonts",
    fluidComments: "",
  },
  {
    section: "Coding",
    checkpoint: "Bootstrap CSS import exists",
    method: checkForBootstrapImports,
    done: undefined,
    comments: "Do not use Bootstrap imports, use AEM grid for layout and styling",
    fluidComments: "",
  },
  {
    section: "Coding",
    checkpoint: "Bootstrap classes",
    method: checkForBootstrapClasses,
    done: undefined,
    comments: "Do not utilize Bootstrap classes, use AEM grid classes",
    fluidComments: "",
  },
  {
    section: "Coding",
    checkpoint: "AEM Grid",
    method: checkForAEMGridClasses,
    done: undefined,
    comments: "Use AEM Grid classes",
    fluidComments: "",
  },
  {
    section: "Images",
    checkpoint: "Image lazy-loading",
    method: hasImgWithoutLazyLoading,
    done: undefined,
    comments: "Lazyload images below fold",
    fluidComments: "",
  },
  {
    section: "Accessibility",
    checkpoint: "Img alt attribute",
    method: hasImgWithoutAlt,
    done: undefined,
    comments:
      'All images should have alt attribute, decorative images should have alt="" or role=presentation',
    fluidComments: "",
  },
  {
    section: "Images",
    checkpoint: "Image resolution",
    method: imgHasSizeParameters,
    done: undefined,
    comments: "All images should have defined width and height - please specify it in the img file name",
    fluidComments: "",
  },
  {
    section: "Coding",
    checkpoint: "Video player import",
    method: hasIncorrectVideoPlayerImport,
    done: undefined,
    comments:
      "Video player has to be imported correctly for AEM to generate a correct link - please see the HTML guidance document",
    fluidComments: "",
  },
  {
    section: "Coding",
    checkpoint: "Inline style",
    method: hasStyleAttribute,
    done: undefined,
    comments: "Do not use inline styling - move all styling to .css files",
    fluidComments: "",
  },
  {
    section: "Coding",
    checkpoint: "Unique parent element ID",
    method: hasUniqueParentElementId,
    done: undefined,
    comments: "Parent element should always have a unique ID",
    fluidComments: "",
  },
  {
    section: "Coding",
    checkpoint: "<body> or <head> exist in fragment",
    method: hasBodyOrHeadInFragment,
    done: undefined,
    comments: "HTML fragment should NOT contain <body> or <head> elements",
    fluidComments: "",
  },
  {
    section: "Coding",
    checkpoint: "h4 tags and below (h5,h6)",
    method: hasH4TagsAndBelow,
    done: undefined,
    comments: "Component should only have <h4> tags and smaller",
    fluidComments: "",
  },
  {
    section: "Coding",
    checkpoint: "tags above h4 (h1,h2,h3)",
    method: hasTagsAboveH4,
    done: undefined,
    comments: "Component should NOT use tags larger than h4",
    fluidComments: "",
  },
  {
    section: "Coding",
    checkpoint: "Tables <caption>",
    method: tablesHasCaption,
    done: undefined,
    comments: "All tables should have a caption (contain <caption> element)",
    fluidComments: "",
  },
  {
    section: "Coding",
    checkpoint: "Social sharing elements",
    method: searchForSocialSharingElements,
    done: undefined,
    comments: "Social sharing elements are embedded incorrectly - please check if there are fewer than 5 socials",
    fluidComments: "",
  },
  {
    section: "Coding",
    checkpoint: "iframe",
    method: hasIframeTag,
    done: undefined,
    comments: "Do not use <iframe> elements",
    fluidComments: "",
  },
  {
    section: "Styling",
    checkpoint: "CSS overwrite",
    method: checkCustomCSS,
    done: undefined,
    comments:
      "This page contains a <style> tag which overwrites CSS for previously defined classes. Please move all styling to .css files",
    fluidComments: "",
  },
  {
    section: "3rd party",
    checkpoint: "Icon libraries",
    method: searchForFontAwesomeIcons,
    done: undefined,
    comments: "Do not use icons from a 3rd party not brand-approved library",
    fluidComments: "",
  },
  {
    section: "Styling",
    checkpoint: "Use <strong> and <em> tags",
    method: searchForBITags,
    done: undefined,
    comments: "Use <strong> and <em> tags instead of <b> and <i> for emphasis",
    fluidComments: "",
  },
];
